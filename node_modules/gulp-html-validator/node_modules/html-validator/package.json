{
  "name": "html-validator",
  "version": "0.0.7",
  "description": "Validate html using validator.w3.org/nu",
  "author": {
    "name": "Geir GÃ¥sodden",
    "email": "geir.gasodden@pythonia.no",
    "url": "https://github.com/zrrrzzt"
  },
  "main": "index.js",
  "bin": {
    "html-validator": "cli.js"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha --reporter spec test/*.js"
  },
  "files": [
    "index.js",
    "cli.js"
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/zrrrzzt/html-validator.git"
  },
  "bugs": {
    "url": "http://github.com/zrrrzzt/html-validator/issues"
  },
  "license": "MIT",
  "dependencies": {
    "minimist": "^0.1.0",
    "request": "^2.36.0",
    "valid-url": "^1.0.9"
  },
  "devDependencies": {
    "mocha": "^1.18.2"
  },
  "readme": "#html-validator [![Build Status](https://travis-ci.org/zrrrzzt/html-validator.svg?branch=master)](https://travis-ci.org/zrrrzzt/html-validator)\n\nA Node.js module/CLI app for validating html using [validator.w3.org/nu](http://validator.w3.org/nu/)\n\n##Module\nSupports the following modes from Validator.nu [Web Service Interface](http://wiki.whatwg.org/wiki/Validator.nu_Web_Service_Interface)\n- Document URL as a GET parameter; the service retrieves the document by URL over HTTP or HTTPS.\n- Document POSTed as the HTTP entity body; parameters in query string as with GET.\n\n###Installation\n\n```\n$ npm install html-validator\n```\n\n###Test\n\n```\n$ npm test\n```\n\n###Usage\n\nCreate an options object.\n\n**format** This is the formatting of the returned data and it is required. It supports json, html, xhtml, xml, gnu and text.\n\n**validator** You can override the default validator as long as it exposes the same REST interface.\n\n**url** The url to the page you want to validate.\n\n```javascript\nvar validator = require('html-validator')\n  , opts = {\n      url : 'http://url-to-validate.com',\n      format : 'json'\n  };\n\nvalidator(opts, function(err, data){\n  if(err) throw err;\n\n  console.log(data);\n});\n\n```\n\n**data** The html you want to validate\n\n```javascript\nvar validator = require('html-validator')\n  , fs = require('fs')\n  , opts = {\n    format : 'json'\n  };\n\n\nfs.readFile( 'file-to-validate.html', 'utf8', function( err, html ) {\n  if (err) throw err;\n\n  opts.data = html;\n\n  validator(opts, function(err, data){\n    if(err) throw err;\n\n    console.log(data);\n  });\n\n});\n```\n\n**validator** You can override the default validator as long as it exposes the same REST interface.\n\n```javascript\nvar validator = require('html-validator')\n  , opts = {\n      url : 'http://url-to-validate.com',\n      validator: 'http://html5.validator.nu',\n      format : 'json'\n  };\n\nvalidator(opts, function(err, data){\n  if(err) throw err;\n\n  console.log(data);\n});\n\n```\n\n\n##CLI\n\nPass in <url> or --file and optional --format or --validator.\n\n###Installation\n\nInstall globally\n\n```\n$ npm install html-validator -g\n```\n\n###Usage\n\nWith url\n\n```\n$ html-validator <url>\n```\n\nWith file\n\n```\n$ html-validator --file=path-to-file\n```\n\nOptional pass in format for returned data.\n\nValid options: json, html, xhtml, xml, gnu and text (default).\n\n```\n$ html-validator <url> --format=gnu\n```\n\nOptional pass in another validator.\n\nIt needs to expose the same REST interface.\n\n```\n$ html-validator <url> --validator='http://html5.validator.nu'\n```\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/zrrrzzt/html-validator",
  "_id": "html-validator@0.0.7",
  "_shasum": "1a759e88fd9cda9996fecc8448a2da0e9b049581",
  "_from": "html-validator@0.0.7",
  "_resolved": "https://registry.npmjs.org/html-validator/-/html-validator-0.0.7.tgz"
}
